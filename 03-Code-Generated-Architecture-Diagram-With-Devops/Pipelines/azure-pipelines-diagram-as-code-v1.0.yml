####################################
# Automation Scope:-
#####################
# 1. Generate Diagrams by Code.
# 2. Commit 2 Git.
####################################

################################################################################################################################
# Important to Note:-
#####################
# 1. The Consumers only need to change the value which are commented in the "Declare Variables" Section.
# 2. If you are changing the value of "pythonCode" Variable, then make sure, you change the value of "DiagramName" Variable. 
################################################################################################################################

trigger:
  none

#######################
# Declare Variables:-
#######################
variables:
  ServiceConnection: 'amcloud-cicd-service-connection' # Please replace with your Service Connection!
  BuildAgent: 'windows-latest' # Please replace with your Build Agent. You can continue to use this as this is Microsoft Hosted Windows Build Agent!
  envName: 'NonProd' # Please replace with your Azure Devops Environment Name
  pythonCode: 'Generate-Basic-Azure-App-service-Arch-Diagram.py' # Please replace with your script name kept in the "Code" Directory! 
  RootWorkingFolderName: 'Digram-As-Code-With-Devops' # Please replace with your Root Working Folder Name!
  ChildWorkingFolderName1: 'Code' # Please replace with your Child Working Folder Name!
  ChildWorkingFolderName2: 'Diagrams' # Please replace with your Child Working Folder Name!
  WorkingDir: '$(System.DefaultWorkingDirectory)\$(RootWorkingFolderName)\$(ChildWorkingFolderName1)' 
  TargetFolderName: 'AMDaC' # Please replace with your naming convention!
  Target: '$(build.artifactstagingdirectory)\$(TargetFolderName)'
  Artifact: 'DaC' # Please replace with your naming convention!
  DiagramName: 'basic_azure_app_service_architecture.png' # Please replace with the name, you have mentioned inside your Python Script!
  DevopsOrgName: 'ArindamMitra0251' # Please replace with your Azure Devops Organisation Name!
  DevopsPrjName: 'AMCLOUD' # Please replace with your Azure Devops Project Name!
  DevopsRepoName: 'YAML-v1.0' # Please replace with your Azure Devops Repository Name!
  DevOpsGITUser: 'AM' # Please replace with your Custom GIT Username!
  DevOpsGITEmail: 'arindam0310018@gmail.com' # Please replace with your GIT user email address!

######################
# Declare Build Agent:-
######################
pool:
  vmImage: '$(BuildAgent)'

#############################
# Declare Stages:-
# Generate Diagrams by Code
#############################
stages:

- stage: Diagram_As_Code
  jobs:
  - job: Diagram_As_Code
    displayName: Diagram As Code
    steps:
    - task: AzureCLI@2
      displayName: Diagram As Code
      inputs:
        azureSubscription: $(ServiceConnection)
        scriptType: ps
        scriptLocation: inlineScript
        inlineScript: |
          echo "##########################################################"
          $choco_ver = choco -v
          echo "The latest chocolatey version installed is: $choco_ver"
          echo "##########################################################"
          python --version
          echo "#######################################"
          pip --version
          echo "#######################################"
          echo "Installing Graphiz...!"
          echo "#######################################"
          choco install graphviz -y
          echo "#######################################"
          echo "Validate graphviz Installation..."
          echo "########################################"
          sleep 10
          dot -V
          echo "########################################"
          pip install diagrams
          echo "########################################"
          cd $(System.DefaultWorkingDirectory)\$(RootWorkingFolderName)\$(ChildWorkingFolderName1)\
          dir
          echo "########################################"
          python $(System.DefaultWorkingDirectory)\$(RootWorkingFolderName)\$(ChildWorkingFolderName1)\$(pythonCode)   
          cd $(System.DefaultWorkingDirectory)\$(RootWorkingFolderName)\$(ChildWorkingFolderName1)\
          dir
          $outputPath = "$(System.DefaultWorkingDirectory)\$(RootWorkingFolderName)\$(ChildWorkingFolderName1)\$(DiagramName)"
          if (Test-Path $outputPath) {
             Write-Host "$(DiagramName) created successfully."
             } 
          else {
                Write-Host "$(DiagramName) was NOT created."
                exit 1
                }
          echo "########################################"

###############################################
# Copy Files to Artifacts Staging Directory:-
###############################################
    - task: CopyFiles@2
      displayName: Copy Files Artifacts Staging Directory
      inputs:
        SourceFolder: '$(workingDir)'
        Contents: |
          **/*.png
        TargetFolder: '$(Target)'

# ########################
# # Publish Artifacts:-
# ########################
    - task: PublishBuildArtifacts@1
      displayName: Publish Artifacts
      inputs:
        targetPath: '$(Target)'
        artifactName: '$(Artifact)'     

#############################
# Stage: Commit 2 Code
#############################

- stage: Commit_2_Git
  condition: succeeded('Diagram_As_Code')
  jobs:
  - deployment: 
    displayName: Commit_2_Git
    environment: $(envName)
    pool:
      vmImage: '$(BuildAgent)'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self 
            persistCredentials: true

#########################
# Download Artifacts:-
#########################
          - task: DownloadBuildArtifacts@0
            displayName: Download Artifacts
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: '$(Artifact)'
              downloadPath: '$(System.ArtifactsDirectory)'

#########################################
# Commit 2 Git:-
# Authentication - System Access Token
#########################################
          - task: PowerShell@2
            displayName: GIT Commit 
            inputs:
              targetType: 'inline'
              script: |
                cd $(System.DefaultWorkingDirectory)\$(RootWorkingFolderName)\$(ChildWorkingFolderName2)
                cp $(System.ArtifactsDirectory)\$(Artifact)\$(TargetFolderName)\$(DiagramName) . 
                echo "#####################"
                echo "Diagram copied!"
                echo "Listing the contents in the current directory:-"
                dir
                echo "#####################"
                git remote -v
                echo "#####################"
                git remote set-url origin https://$(System.AccessToken)@dev.azure.com/$(DevopsOrgName)/$(DevopsPrjName)/_git/$(DevopsRepoName)
                echo "#####################"
                git ls-remote origin
                echo "#####################"
                git config --global user.email "$(DevOpsGITEmail)"
                git config --global user.name "$(DevOpsGITUser)"
                git config --global --unset https.proxy
                git checkout -b $(Build.SourceBranchName)
                git add .
                git commit -m "Output Architecture Diagram"
                git push origin $(Build.SourceBranchName)
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)